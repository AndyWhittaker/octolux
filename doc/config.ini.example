[lxp]
host = 192.168.3.240
port = 8000
serial = *0252016062
datalog = BA10330137

host_slave = 192.168.3.241
port_slave = 8000
serial_slave = *0252016063
datalog_slave = BA10330178

batteries = 2

# these can be obtained from your Octopus account;
# see the URL under Unit Rates at https://octopus.energy/dashboard/developer/
#
# note that the tariff_code has a different final letter depending
# on your region, so unless you're in North West England you may need to change this.
[octopus]
product_code = AGILE-18-02-21
tariff_code = E-1R-AGILE-18-02-21-G

# These are found from your Solcast Account
[solcast]
api_key = abcdefghijklmnopqrstuvwxyz123456
resource_id = abcd-1234-efgh
# Enter your house baseload here (in watts) to calculate excess solar.
base_load = 300
# Enter the maximum age (in minutes) Solcast should be before refreshing
# Every slot < 30. Cronjob limits to every 30. [50 queries per day in free tier]
max_forecast_age = 25

[server]
# used by server.rb to open a listening port.
# use 0.0.0.0 here to make the server available externally
listen_host = localhost
# used by octolux.rb to connect to server.rb
connect_host = localhost
port = 4346

[mqtt]
# see https://github.com/mqtt/mqtt.github.io/wiki/URI-Scheme for URI help
# you can leave this commented out if you don't want to use MQTT at all.
# uri = mqtt://nas:1883
# uri = mqtt://emonpi:emonpimqtt2016@emonpi:1883

[rules]
# use the cheapest energy to get the batteries to this SOC each night
required_soc = 90
# enable emergency charge if approaching peak period with less SOC than this.
# this is a final backup to avoid running out of charge during peak
emergency_soc = 35
# always charge when electricity is cheaper than this unit price,
# even if the SOC is already higher than required_soc
cheap_charge = 2
# never charge when electricity is more expensive than this unit price
max_charge = 9
# Prior to peak period, never discharge is price is cheaper than this unit price
pre_discharge = 12
# After the peak period, never discharge if price is cheaper than this unit price
post_discharge = 10